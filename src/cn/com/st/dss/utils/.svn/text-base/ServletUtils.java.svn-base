package cn.com.st.dss.utils;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.sun.xml.internal.ws.api.message.Attachment;

import net.sf.json.JSONObject;

import cn.com.st.dss.jdbc.DBConnection;
import cn.com.st.dss.utils.flexigrid.FlexiGridDomain;

public class ServletUtils {

	public static String  transferToUtf8(HttpServletRequest request, String paramName) {

		try {
			return new String(request.getParameter(paramName).getBytes(
					"iso8859-1"), "utf-8");
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return paramName;
	}
	
	public static void arrayToJson(HttpServletResponse response,String sql) throws IOException {
		// response相关处理
		response.setContentType("html/txt");
		response.setCharacterEncoding("utf-8");
		response.setHeader("Pragma", "no-cache");
		response.setHeader("Cache-Control", "no-cache, must-revalidate");
		response.setHeader("Pragma", "no-cache");

		String json = new DBConnection().getRecordJson(sql);
		//String action = request.getPar  
		System.out.println("json:="+json);
		
		//写回浏览器
		response.getWriter().write(json);
		response.getWriter().flush();
		response.getWriter().close();

	}
	
	
	public static void writeToBrower(HttpServletResponse response,String jsonString) throws IOException {
		// response相关处理
		response.setContentType("html/txt");
		response.setCharacterEncoding("utf-8");
		response.setHeader("Cache-Control", "no-cache, must-revalidate");
		response.setHeader("Pragma", "no-cache");

		System.out.println("json:="+jsonString);
		
		//写回浏览器
		response.getWriter().write(jsonString);
		response.getWriter().flush();
		response.getWriter().close();

	}

 
}
