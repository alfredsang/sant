package cn.com.st.dss.catv.controller;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import cn.com.st.dss.jdbc.DBConnection;
import cn.com.st.dss.utils.Form2pojoUtil;
import cn.com.st.dss.utils.ServletUtils;
import cn.com.st.dss.utils.flexigrid.FlexiGridDomain;
import cn.com.st.dss.utils.flexigrid.my.WorkspaceList;
import cn.com.st.dss.xml.JdomTableMappingUtil;

import net.sf.json.JSONObject;

/**
 * Servlet implementation class WorkspaceController
 */
public class queryController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	private DBConnection db = null; 
	
	public void init() throws ServletException {
		db = new DBConnection();// ������
		try {
			db.getCurrentConnection();
		} catch (SQLException e1) {
		}
	}

	public queryController() {
		super();
		// TODO Auto-generated constructor stub
	}

	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		doPost(request, response);
	}

	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {

//		System.out.println("sssssssssssssssssssss");

		String action = "";
		if (request.getParameter("action") != null) {
			action = request.getParameter("action");
		}
		
		

		if (action.equalsIgnoreCase("list")) {

//			System.out.println(request.getParameter("page"));
//			System.out.println(request.getParameter("rp"));
//			System.out.println("sang long :---query:="
//					+ request.getParameter("query"));

			//String querySql = request.getParameter("querySql");
			
			String querySql = new String(request.getParameter("querySql").getBytes("iso8859-1"),"utf-8");
			//System.out.println("in toJSON:"+myRequest.getParameter("pCount"));
			//queryController?action=list&pCount=3&a=1&b=2&c=3
			//int paramCount = Integer.parseInt(request.getParameter("pCount"));
			//Map m=getCellName(request, paramCount);
			querySql = querySql.replaceAll("@", "'");
			
			System.out.println("-----------querySql:"+querySql);
			String qString = new String(request.getParameter("qString").getBytes("iso8859-1"),"utf-8");
//			System.out.println(qString+"-----------*qString");
			String cellName[]=qString.trim().split("@");
			
			String sortname = new String(request.getParameter("sortname").getBytes("iso8859-1"),"utf-8");

			try {
				new WorkspaceList(request, response, querySql,cellName,sortname);

			} catch (Exception e) {
				request.setAttribute("exception_msg", "processList error~~~");
			}

		} else if ("customQuery".equalsIgnoreCase(action)) {

			String configxml = request.getParameter("configxml");

			JdomTableMappingUtil jtmu = new JdomTableMappingUtil("http://localhost:8888/catv/sang/"+configxml+".xml");
			String defaultQuery = jtmu.getQuerySql();
			
			String querySql =defaultQuery;//default value
			
			if(request.getParameter("querySql")!=null){
				 querySql = request.getParameter("querySql");
			}
			

			try {
				//new WorkspaceList(request, response, querySql);

			} catch (Exception e) {
				request.setAttribute("exception_msg", "processList error~~~");
			}
			
			request.setAttribute("querySql",querySql);
			
			RequestDispatcher rd = request.getRequestDispatcher(request.getRequestURI());
			rd.forward(request, response);

		} else {
			System.out.println("mei");
		}

	}

	
	private Map getCellName(HttpServletRequest request,int pCount){
		Map map = new HashMap();  
	    Enumeration paramNames =request.getParameterNames();  
	    
	 
	    String[] b = new String[pCount];
	    
	 
	    while (paramNames.hasMoreElements()) {  
	    	String paramName = (String) paramNames.nextElement();  
	    	
	    	if(!paramName.equalsIgnoreCase("action")&&!paramName.equalsIgnoreCase("pCount")){
	    		String[] paramValues = request.getParameterValues(paramName);  
				if (paramValues.length == 1) {  
					String paramValue = paramValues[0];  
					
					if (paramValue.length() != 0) {  
//						System.out.println("����" + paramName + "=" + paramValue);  
						map.put(paramName, paramValue);  
						//select id,attr_name as cell  from nmdss_dss_table_attr where id=2 or id=3
						//b[count] =paramName ;
					}  
				}  
	    	}

	    	
	    } 
	    
	    
	    return map;
	}
}
